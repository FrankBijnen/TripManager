; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "TripManager"
#define MyAppVersion GetVersionNumbersString('..\Win32\TripManager.exe')
#define MyAppPublisher "TDBware"
#define ExeName "TripManager.exe" 
#define DefaultDirName "{code:DefaultDir}\TripManager" 
#define MyAppId "{{33018F95-765A-49CA-B6FC-0B3AB06701BD}" 

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={#DefaultDirName}
DisableDirPage=no
DefaultGroupName={#MyAppName}
UninstallDisplayIcon={app}\{#ExeName}
OutputDir=.
OutputBaseFilename=setup_{#MyAppName}
Compression=lzma2/normal
LZMANumBlockThreads=16
LZMAUseSeparateProcess=yes
SolidCompression=no
RestartIfNeededByRun=no
ArchitecturesInstallIn64BitMode=x64compatible

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Components]
Name: ExecutableWin32;                  Description: "Install Executable (Win32)";            types: full;          Check: Win32;
Name: ExecutableWin64;                  Description: "Install Executable (Win64)";            types: full;          Check: Win64;
Name: Symbols;                          Description: "Install Symbols";                       types: full;

[Tasks]
Name: "desktopicon";                    Description: "{cm:CreateDesktopIcon}";                GroupDescription: "{cm:AdditionalIcons}";

[Files]
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "..\Win32\TripManager.exe";       DestDir: "{app}"; Components: ExecutableWin32;      Flags: ignoreversion
Source: "..\Win32\Trk2Fit.exe";           DestDir: "{app}"; Components: ExecutableWin32;      Flags: ignoreversion
Source: "..\Win32\Fit2Gpx.exe";           DestDir: "{app}"; Components: ExecutableWin32;      Flags: ignoreversion
Source: "..\Win32\WebView2Loader.dll";    DestDir: "{app}"; Components: ExecutableWin32;      Flags: ignoreversion
Source: "..\Win32\sqlite3.dll";           DestDir: "{app}"; Components: ExecutableWin32;      Flags: ignoreversion

Source: "..\Win64\TripManager.exe";       DestDir: "{app}"; Components: ExecutableWin64;      Flags: ignoreversion
Source: "..\Win64\Trk2Fit.exe";           DestDir: "{app}"; Components: ExecutableWin64;      Flags: ignoreversion
Source: "..\Win64\Fit2Gpx.exe";           DestDir: "{app}"; Components: ExecutableWin64;      Flags: ignoreversion
Source: "..\Win64\WebView2Loader.dll";    DestDir: "{app}"; Components: ExecutableWin64;      Flags: ignoreversion
Source: "..\Win64\sqlite3.dll";           DestDir: "{app}"; Components: ExecutableWin64;      Flags: ignoreversion
; Images
Source: "..\Win32\Symbols\*";             DestDir: "{app}\Symbols";     Components: Symbols;  Flags: recursesubdirs; Excludes: "*.png,*.jbf,*.db"

[Registry]

[InstallDelete]

[Icons]
Name: "{group}\{#MyAppName}";         Filename: "{app}\TripManager.exe"
Name: "{autodesktop}\{#MyAppName}";   Filename: "{app}\TripManager.exe";              tasks: desktopicon;

[Run]

[Code]

{ @TLama's function from https://stackoverflow.com/q/14392921/850848 }
function CmdLineParamExists(const Value: string): Boolean;
var
  I: Integer;
begin
  Result := False;
  for I := 1 to ParamCount do
    if CompareText(ParamStr(I), Value) = 0 then
    begin
      Result := True;
      Exit;
    end;
end;

function Win32: boolean;
begin
  result := (not IsWin64) or CmdLineParamExists('/Win32');
end;

function Win64: boolean;
begin
  result := not Win32;
end;

function DefaultDir(Param: string): string;
begin
  result := ExpandConstant('{autopf}');
  if (IsWin64) and
     (CmdLineParamExists('/Win32')) then
    result := ExpandConstant('{autopf32}');
end;

function InitializeSetup(): Boolean;
var
  RegKey: string;
  ErrorCode: integer;
  UninstallString: string;
begin
  Result := true;
  RegKey := 'SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\' + ExpandConstant('{#MyAppId}') + '_is1';
  if RegQueryStringValue(HKLM, RegKey, 'UninstallString', UninstallString) and
     (Is64BitInstallMode) then
  begin   
    result := MsgBox('The current TripManager version needs to be uninstalled before continuing. Uninstall now?' + #10 + 
                     UninstallString, mbConfirmation, MB_YESNO) = IDYES;
    if (result) then
      ShellExec('', UninstallString, '/SILENT', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode);
  end;    
end;
